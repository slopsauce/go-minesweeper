name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write  # Required for creating releases

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    
    - name: Set up Go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        go-version: '1.21'
        check-latest: true
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libgl1-mesa-dev libasound2-dev libxxf86vm-dev
    
    - name: Build for Linux (amd64)
      env:
        GOOS: linux
        GOARCH: amd64
        CGO_ENABLED: 1
      run: go build -v -ldflags="-s -w" -o minesweeper-linux-amd64 .
    
    - name: Build for Linux (arm64)
      env:
        GOOS: linux
        GOARCH: arm64
        CGO_ENABLED: 1
      run: go build -v -ldflags="-s -w" -o minesweeper-linux-arm64 .
    
    - name: Upload Linux binaries
      uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
      with:
        name: linux-binaries
        path: minesweeper-linux-*

  build-macos:
    strategy:
      matrix:
        include:
          - arch: amd64
            runner: macos-13
          - arch: arm64  
            runner: macos-latest
    runs-on: ${{ matrix.runner }}
    steps:
    - name: Checkout code
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    
    - name: Set up Go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        go-version: '1.21'
        check-latest: true
    
    - name: Build for macOS (${{ matrix.arch }})
      env:
        GOOS: darwin
        GOARCH: ${{ matrix.arch }}
        CGO_ENABLED: 1
      run: go build -v -ldflags="-s -w" -o minesweeper-darwin-${{ matrix.arch }} .
    
    - name: Upload macOS binaries
      uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
      with:
        name: macos-${{ matrix.arch }}-binary
        path: minesweeper-darwin-${{ matrix.arch }}

  release:
    needs: [build-linux, build-macos]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    
    - name: Download all artifacts
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      with:
        merge-multiple: true
    
    - name: Create Release with GitHub CLI
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref_name }}
      run: |
        gh release create "$tag" \
          --repo="$GITHUB_REPOSITORY" \
          --title="Go Minesweeper ${tag}" \
          --notes="## Go Minesweeper ${tag}
        
        Authentic Windows 3.1 Minesweeper recreation built in Go with Ebiten.
        
        ### Download & Play
        - **Linux (amd64)**: \`minesweeper-linux-amd64\`
        - **Linux (arm64)**: \`minesweeper-linux-arm64\`
        - **macOS (Intel)**: \`minesweeper-darwin-amd64\`
        - **macOS (Apple Silicon)**: \`minesweeper-darwin-arm64\`
        
        ### Controls
        - **Left Click**: Reveal cell
        - **Right Click**: Flag/unflag cell
        - **Smiley Face**: Reset game
        
        ### Features
        - Authentic Windows 3.1 graphics and feel
        - 16x16 grid with 40 mines (Expert difficulty)
        - First click is always safe
        - Timer and mine counter with 999-second cap
        - Win/lose detection with proper smiley face states
        - Professional Go code following best practices
        
        ðŸ¤– Generated with [Claude Code](https://claude.ai/code)" \
          minesweeper-linux-amd64 \
          minesweeper-linux-arm64 \
          minesweeper-darwin-amd64 \
          minesweeper-darwin-arm64