name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

    - name: Set up Go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        go-version: '1.21'
        check-latest: true

    # Install system dependencies for Ebiten
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libgl1-mesa-dev libasound2-dev

    - name: Verify dependencies
      run: go mod verify

    - name: Run go vet
      run: go vet ./...

    - name: Check formatting
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "Code is not formatted properly:"
          gofmt -s -l .
          exit 1
        fi

    - name: Build
      run: go build -v ./...

  build-matrix:
    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: linux
            goarch: amd64
            runs-on: ubuntu-latest
          - goos: windows
            goarch: amd64
            runs-on: ubuntu-latest
          - goos: darwin
            goarch: amd64
            runs-on: ubuntu-latest
          - goos: darwin
            goarch: arm64
            runs-on: ubuntu-latest
          - goos: linux
            goarch: arm64
            runs-on: ubuntu-latest
    runs-on: ${{ matrix.runs-on }}
    steps:
    - name: Checkout code
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

    - name: Set up Go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        go-version: '1.21'
        check-latest: true

    # Install system dependencies for Linux builds
    - name: Install system dependencies
      if: matrix.goos == 'linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libgl1-mesa-dev libasound2-dev

    - name: Verify dependencies
      run: go mod verify

    - name: Build ${{ matrix.goos }}-${{ matrix.goarch }}
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        # Ebiten requires CGO for graphics
        CGO_ENABLED: 1
      run: |
        if [ "${{ matrix.goos }}" = "windows" ]; then
          go build -v -ldflags="-s -w" -o minesweeper-${{ matrix.goos }}-${{ matrix.goarch }}.exe .
        else
          go build -v -ldflags="-s -w" -o minesweeper-${{ matrix.goos }}-${{ matrix.goarch }} .
        fi

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    
    - name: Set up Go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        go-version: '1.21'
        check-latest: true
    
    - name: golangci-lint
      uses: golangci/golangci-lint-action@aaa42aa0628b4ae2578232a66b541047968fac86 # v6.1.0
      with:
        version: latest
        args: --timeout=5m